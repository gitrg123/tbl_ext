import re

def custom_conversion(input_str):
    # Define a regular expression pattern to match numbers with leading zeros inside brackets
    bracket_pattern = r'\(\s*0+\.\d+\s*\)'

    # Use re.sub to remove brackets and their contents when the number inside is "0.0"
    output_str = re.sub(bracket_pattern, '', input_str)

    # Define a regular expression pattern to match numbers with leading zeros outside brackets
    number_pattern = r'\b0+(\d+\.\d+)\b'

    # Use re.sub with a custom function to remove leading zeros from matched numbers
    def remove_leading_zeros(match):
        return match.group(1)

    # Replace the matched numbers with the modified ones
    output_str = re.sub(number_pattern, remove_leading_zeros, output_str)

    return output_str

# Test cases
input1 = "00006.00 (0023.1)"
output1 = custom_conversion(input1)
print(output1)  # Output: "6.00 (23.1)"

input2 = "MR 11.5 mg QD"
output2 = custom_conversion(input2)
print(output2)  # Output: "MR 11.5 mg QD"

input3 = "0006 (0.0)"
output3 = custom_conversion(input3)
print(output3)  # Output: "6"

input4 = "n (%)"
output4 = custom_conversion(input4)
print(output4)  # Output: "n (%)"

input5 = "00026 (000.0)"
output5 = custom_conversion(input5)
print(output5)  # Output: "26"
